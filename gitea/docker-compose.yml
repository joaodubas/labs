---
version: '3.7'

services:
  git:
    image: 'gitea/gitea:1.16.9'
    init: true
    environment:
      APP_NAME: ${GIT_APP_NAME:-gitea}
      USER_UID: ${UID:-1000}
      USER_GID: ${GID:-1000}
      RUN_MODE: ${GIT_RUN_MODE:-prod}
      DOMAIN: ${GIT_DOMAIN:-localhost}
      SSH_DOMAIN: ${GIT_SSH_DOMAIN:-localhost}
      HTTP_PORT: ${GIT_HTTP_PORT:-3000}
      ROOT_URL: http://${GIT_DOMAIN:-localhost}:3000
      SSH_PORT: ${GIT_SSH_PORT:-222}
      SSH_LISTEN_PORT: ${GIT_SSH_LISTEN_PORT:-22}
      DB_TYPE: ${GIT_DB_TYPE:-sqlite3}
      DISABLE_REGISTRATION: ${GIT_DISABLE_REGISTRATION:-true}
    restart: unless-stopped
    volumes:
      - 'git_data:/data'
    networks:
      - git_cicd_net
    ports:
      - '222:22'
  ci:
    image: 'drone/drone:2.12.1'
    init: true
    environment:
      DRONE_DATABASE_DRIVER: ${DRONE_DATABASE_DRIVER:-sqlite3}
      DRONE_DATABASE_DATASOURCE: ${DRONE_DATABASE_DATASOURCE:-/data/database.sqlite}
      DRONE_GITEA_SERVER: 'http://git:3000'
      DRONE_GIT_ALWAYS_AUTH: ${DRONE_GIT_ALWAYS_AUTH:-false}
      DRONE_RPC_SECRET: &drone_rpc_secret ${DRONE_RPC_SECRET:-drone_secret}
      DRONE_SERVER_PROTO: ${DRONE_SERVER_PROTO:-http}
      DRONE_SERVER_HOST: ${DRONE_SERVER_HOST:-localhost}:3000
      DRONE_TLS_AUTOCERT: ${DRONE_TLS_AUTOCERT:-false}
      DRONE_USER_CREATE: ${DRONE_USER_CREATE:-username:admin,machine:false,admin:true,token:drone_secret}
      DRONE_GITEA_CLIENT_ID: ${DRONE_GITEA_CLIENT_ID:-}
      DRONE_GITEA_CLIENT_SECRET: ${DRONE_GITEA_CLIENT_SECRET:-}
    restart: unless-stopped
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'ci_data:/data'
    networks:
      - git_cicd_net
  worker:
    image: 'drone/drone-runner-docker:1.8.2'
    init: true
    environment:
      DRONE_RPC_PROTO: ${WORKER_RPC_PROTO:-http}
      DRONE_RPC_HOST: ${WORKER_RPC_HOST:-ci}
      DRONE_RPC_SECRET: *drone_rpc_secret
      DRONE_RUNNER_NAME: ${WORKER_RUNNER_NAME:-runner}
      DRONER_RUNNER_CAPACITY: ${WORKER_RUNNER_CAPACTIY:-2}
      DRONE_RUNNER_NETWORKS: git_cicd_net
      DRONE_DEBUG: ${WORKER_DEBUG:-false}
      DRONE_TRACE: ${WORKER_TRACE:-false}
    restart: unless-stopped
    depends_on:
      - ci
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - git_cicd_net
  cron:
    image: 'premoweb/chadburn:1.0.2.1'
    init: true
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './config/cron:/opt/chadburn'
    restart: unless-stopped
    networks:
      - git_cicd_net
    command: daemon --config=/opt/chadburn/config.ini

  renovate:
    image: 'renovate/renovate:32.127.1'
    init: true
    environment:
      GITHUB_COM_TOKEN: ${GITHUB_COM_TOKEN:-token}
      RENOVATE_TOKEN: ${RENOVATE_TOKEN:-token}
      RENOVATE_GIT_AUTHOR: ${RENOVATE_GIT_AUTHOR:-'renovate <renovate@example.com>'}
      RENOVATE_CONFIG_FILE: '/opt/renovate/config.js'
      RENOVATE_BASE_DIR: '/opt/renovate_data'
    labels:
      chadburn.enabled: 'true'
      chadburn.job-exec.renovate.schedule: '@every 30m'
      chadburn.job-exec.renovate.command: '/usr/local/bin/renovate'
    volumes:
      - './config/renovate:/opt/renovate'
      - 'renovate_data:/opt/renovate_data'
    restart: unless-stopped
    networks:
      - git_cicd_net
    entrypoint: sleep
    command: infinity

  minio:
    image: 'quay.io/minio/minio:RELEASE.2022-07-24T17-09-31Z'
    environment:
      MINIO_SERVER_URL: ${MINIO_SERVER_URL:-http://localhost}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL:-http://localhost}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-dubas}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-dubas}
    volumes:
      - 'minio_data:/data'
    restart: unless-stopped
    networks:
      - git_cicd_net
    command: 'server /data --console-address ":9001"'

volumes:
  git_data: {}
  ci_data: {}
  renovate_data: {}
  minio_data: {}

networks:
  git_cicd_net:
    name: git_cicd_net
